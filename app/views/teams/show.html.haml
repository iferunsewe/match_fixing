/ = team_color(@team)
-# Compile the stylesheet if necessary
- team_stylesheet = TeamStylesheet.new(@team)
- team_stylesheet.compile unless team_stylesheet.compiled?

-# At this point you can access your compiled stylesheet.
-# You can either render it directly on the page or reference it via stylesheet_link_tag
-# The latter can only be done if you're serving assets directly via your app.
-# If you use the AssetSync gem or similar to upload your assets to S3, you should render it inline because it hasn't been uploaded.

-# Render on page:
-# Again, use Sprockets::Environment instead of Sprockets::Index to find the dynamically created asset.
- env = Rails.application.assets.is_a?(Sprockets::Index) ? Rails.application.assets.instance_variable_get('@environment') : Rails.application.assets

-# Reference:
= stylesheet_link_tag team_stylesheet.stylesheet_file
%hr/
.container
  .row
    .col-sm-9
      %h1.object-name
        = @team.name
        - if @team.players != [] && @team.average_rating(@team) != 0
          -(1..@team.average_rating(@team)).each do |i|
            = image_tag("star-on.png")
          -#%b= "#{number_with_precision(@team.average_rating(@team), precision: 2)}"


    .col-sm-2
      %a.pull-right{:href => "/teams"}
        %img.img-circle.img-responsive{:src => "http://www.gravatar.com/avatar/28fd20ccec6865e2d5f0e1f4446eb7bf?s=100", :title => "profile image"}/
  .row
    .col-sm-3
      / left col
      %ul.list-group.font-override
        %li.list-group-item.text-muted.color_override Profile
        %span.pull-right.flag-icon.flag-icon-gr
        %li.list-group-item.text-right.color_override_alt
          %span.pull-left
            %strong Hometown:
          =@team.hometown || 'London'
        %li.list-group-item.text-right.color_override_alt
          %span.pull-left
            %strong Seeking Players:
          = @team.seeking_players || 'Maybe'
      %ul.list-group.font-override
        %li.list-group-item.text-muted.color_override
          Actions
          %i.fa.fa-dashboard.fa-1x
        %li.list-group-item.text-right.color_override_alt
          %span.pull-left
            %strong Fancy a match
          = link_to(new_match_path){"<i class='fa fa-arrow-right'></i>"}
        - if user_is_admin?
          %li.list-group-item.text-right.color_override_alt
            %span.pull-left
              %strong Edit Team
            = link_to(edit_team_path(@team)){"<i class='fa fa-arrow-right'></i>"}
          %li.list-group-item.text-right.color_override_alt
            %span.pull-left
              %strong Back
            = link_to(teams_path){"<i class='fa fa-arrow-right'></i>"}

    / /col-3
    .col-sm-9
      %ul#myTab.nav.nav-tabs
        %li.active
          %a{"data-toggle" => "tab", :href => "#stats"} Stats
        %li
          %a{"data-toggle" => "tab", :href => "#matches"} Matches
        %li
          %a{"data-toggle" => "tab", :href => "#team"} Players
      .tab-content
        #stats.tab-pane.text-center.active
          .row
            .col-sm-6.stats-box.alt
              %h1 Wins
              %h2= @team.wins
            .col-sm-6.stats-box
              %h1 Draws
              %h2= @team.draws
          .row
            .col-sm-6.stats-box
              %h1 Losses
              %h2= @team.losses
            .col-sm-6.stats-box.alt
              %h1 Points
              %h2= @team.points
        / /tab-pane
        #matches.tab-pane
          - if @team_matches != []
            = render 'teams/team_matches'
          - else
            %p No matches scheduled

          %hr/
          .row
            .col-md-4.col-md-offset-4.text-center
              %ul#myPager.pagination
          / /table-resp
          %hr/
        / /tab-pane
        #team.tab-pane
          %hr/
          %h1
            -@team.players.map do |player|
              %li= player.name
      / /tab-pane
    / /tab-content
  / /col-9
/ /row

